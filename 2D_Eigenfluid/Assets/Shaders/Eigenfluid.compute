// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;


/*
TODO: u(x,y) <-- Sum(N)[ w[i]*Phi[i] ]
    - N = basis | simulation parameter
    - w[N] = coefficient vector | recalculated every frame (could be here)
    - Phi[N] = velocity eigen functions | precalculated at the beginning
    - u[x,y] = velocity at given cell | calculated every frame here
    - x,y = cell coordinates [0;Pi[ | thread ID based
*/

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    uint width, height;
    Result.GetDimensions(width, height);

    float2 uv = id.xy / float2(width, height); 

    float3 color = pow(float3(uv.y, uv.x, 0.5), 2);
    Result[id.xy] = float4(color, 1.0); 
}
